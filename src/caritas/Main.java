/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caritas;

import caritas.model.DAO.EnxovalDAO;
import caritas.model.DAO.PecaDAO;
import caritas.model.Entity.Enxoval;
import caritas.model.Entity.Peca;
import caritas.util.GenerateReport;
import caritas.util.GenerateReportEnxoval;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author demetrio
 */
public class Main extends javax.swing.JFrame {
    
    private final String[] colunasTabelaParts = { " Id ", " Nome ", " Quantidade " };
    private final String[] colunasTabelaEnxoval = { " Id ", " Total ", " Ano " };
    private ArrayList<Peca> pecas;
    private ArrayList<Enxoval> enxovais;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
        PecaDAO pecaDAO = new PecaDAO();
        pecas = new ArrayList<Peca>();
        pecas = pecaDAO.listarPecas();
        atualizarTabelaPeca();
        
        EnxovalDAO enxovalDAO = new EnxovalDAO();
        enxovais = new ArrayList<Enxoval>();
        enxovais = enxovalDAO.listarEnxoval();
        atualizarTabelaEnxoval();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPartName = new javax.swing.JLabel();
        txtPartName = new javax.swing.JTextField();
        lblPartAmount = new javax.swing.JLabel();
        txtPartAmount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableParts = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnGenerateReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        btnLimparCampos = new javax.swing.JButton();
        btnDeletePart = new javax.swing.JButton();
        lblTotalEnxoval = new javax.swing.JLabel();
        txtTotalEnxoval = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEnxoval = new javax.swing.JTable();
        lblAno = new javax.swing.JLabel();
        txtAno = new javax.swing.JTextField();
        lblIdEnxoval = new javax.swing.JLabel();
        lblIdEnxovalChanged = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblPartName.setText("Nome da Peça:");

        txtPartName.setMinimumSize(new java.awt.Dimension(4, 25));

        lblPartAmount.setText("Quantidade da Peça:");

        txtPartAmount.setMinimumSize(new java.awt.Dimension(4, 25));

        tableParts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nome", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableParts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePartsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableParts);

        btnSave.setText("Salvar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnGenerateReport.setText("Gerar Relatório Peças");
        btnGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateReportActionPerformed(evt);
            }
        });

        jLabel1.setText("Id:");

        lblId.setText("id");

        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        btnDeletePart.setText("Deletar Peça");
        btnDeletePart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePartActionPerformed(evt);
            }
        });

        lblTotalEnxoval.setText("Total de Enxovais:");

        txtTotalEnxoval.setMinimumSize(new java.awt.Dimension(4, 25));

        jButton1.setText("Salvar Enxoval");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tableEnxoval.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Total de Enxovais", "Ano"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableEnxoval.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEnxovalMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableEnxoval);

        lblAno.setText("Ano:");

        txtAno.setPreferredSize(new java.awt.Dimension(4, 25));

        lblIdEnxoval.setText("Id:");

        lblIdEnxovalChanged.setText("id");

        jButton2.setText("Deletar Enxoval");

        jButton3.setText("Limpar Campos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Gerar Relatório Enxoval");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(btnGenerateReport)
                                .addGap(30, 30, 30)
                                .addComponent(btnLimparCampos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addComponent(btnSave))
                            .addComponent(lblPartAmount, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPartName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPartName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPartAmount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(222, 222, 222)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalEnxoval, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTotalEnxoval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAno)
                            .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(218, 218, 218))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeletePart)
                        .addGap(519, 519, 519)
                        .addComponent(lblIdEnxoval)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIdEnxovalChanged)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(617, 617, 617)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblId)
                    .addComponent(btnDeletePart)
                    .addComponent(lblIdEnxoval)
                    .addComponent(lblIdEnxovalChanged)
                    .addComponent(jButton2))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPartName)
                    .addComponent(lblTotalEnxoval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPartName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalEnxoval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPartAmount)
                    .addComponent(lblAno))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPartAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnGenerateReport)
                    .addComponent(btnLimparCampos)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        String id = lblId.getText();
        String name = txtPartName.getText();
        String amountString = txtPartAmount.getText();
        
        String msg = "";
        
        if (name.trim().isEmpty()) {
            msg += "Digite o nome.\n";
        }
        
        if (amountString.trim().isEmpty()) {
            msg += "Digite a quantidade.";
        }
        if (!msg.isEmpty()) {
            JOptionPane.showMessageDialog(this, msg);
            return;
        } 
            
        int amount = 0;

        try {
            amount = Integer.parseInt(amountString);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Quantidade deve ser inteiro.");
            return;
        }
        
        boolean exists = existsName(name);
        
        if (exists == true) {
            JOptionPane.showMessageDialog(this, "Peça já cadastrada!");
            return;
        }
        
        Peca peca = new Peca();
        
        if (id != "id") {
             
            peca.setId(Integer.parseInt(id));
            peca.setName(name);
            peca.setAmount(amount);

            PecaDAO pecaDAO = new PecaDAO();
            pecaDAO.atualizarPeca(peca);

            rePopularTable();
            
            limparCampos();
            
            JOptionPane.showMessageDialog(this, "Peça atualizadada com sucesso!");
            
        } else {
        
            peca.setName(name);
            peca.setAmount(amount);

            PecaDAO pecaDAO = new PecaDAO();
            pecaDAO.cadastrarPeca(peca);

            rePopularTable();
            
            limparCampos();

            JOptionPane.showMessageDialog(this, "Peça cadastrada com sucesso!");
           
         }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tablePartsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePartsMouseClicked
        int indiceLinha = tableParts.getSelectedRow();
        
        lblId.setText(tableParts.getValueAt(indiceLinha, 0).toString());
        txtPartName.setText(tableParts.getValueAt(indiceLinha, 1).toString());
        txtPartAmount.setText(tableParts.getValueAt(indiceLinha, 2).toString());
    }//GEN-LAST:event_tablePartsMouseClicked

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void btnGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateReportActionPerformed
        JFileChooser jcf = new JFileChooser();
        jcf.setDialogTitle("Salvar relatório como...");
        String msg = "";
        int resultado = jcf.showSaveDialog(null);
        if (resultado == JFileChooser.APPROVE_OPTION) {
                String caminhoEscolhido = jcf.getSelectedFile().getAbsolutePath();

                int sum = 0;
                for (Peca peca : pecas) {
                    sum += peca.getAmount();
                }
                
                GenerateReport generateReport = new GenerateReport();
                msg = generateReport.gerarPlanilhaPecas(pecas, sum, caminhoEscolhido);
                JOptionPane.showMessageDialog(null, msg);
        }
    }//GEN-LAST:event_btnGenerateReportActionPerformed

    private void btnDeletePartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePartActionPerformed
        
        String id = lblId.getText();
        
        if (id != "id") {
            
            PecaDAO pecaDAO = new PecaDAO();
            
            int partId = 0;
            
            partId = Integer.parseInt(id);
                        
            boolean deleted = pecaDAO.deletarPeca(partId);
            
            rePopularTable();
            
            limparCampos();
            
            if (deleted == true) {
                JOptionPane.showMessageDialog(this, "Peça deletada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Ops, ocorreu um erro ao deletar.");
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Nenhuma peça selecionada! Clique em uma peça na tabela para editar.");
        }
    }//GEN-LAST:event_btnDeletePartActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String id = lblIdEnxovalChanged.getText();
        String totalText = txtTotalEnxoval.getText();
        String yearText = txtAno.getText();
        
        String msg = "";
        
        if (totalText.trim().isEmpty()) {
            msg += "Digite o total de enxovais.\n";
        }
        
        if (yearText.trim().isEmpty()) {
            msg += "Digite o ano.\n";
        }
        
        if (yearText.length() < 4) {
            msg += "Digite o ano com 4 digitos.";
        }
        
        if (!msg.isEmpty()) {
            JOptionPane.showMessageDialog(this, msg);
            return;
        }
        
        int total = 0;
        int year = 0;
        
        try {
            total = Integer.parseInt(totalText);
            year = Integer.parseInt(yearText);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Total e ano devem ser inteiros.");
            return;
        }
        
        Enxoval enxoval = new Enxoval();
        
        if (id != "id") {
             
            enxoval.setId(Integer.parseInt(id));
            enxoval.setTotal(total);
            enxoval.setYear(year);

            EnxovalDAO enxovalDAO = new EnxovalDAO();
            enxovalDAO.atualizarEnxoval(enxoval);

            rePopularTableEnxoval();
            
            limparCamposEnxoval();
            
            JOptionPane.showMessageDialog(this, "Enxoval atualizadado com sucesso!");
            
        } else {
        
            enxoval.setTotal(total);
            enxoval.setYear(year);

            EnxovalDAO enxovalDAO = new EnxovalDAO();
            enxovalDAO.cadastrarEnxoval(enxoval);

            rePopularTableEnxoval();
            
            limparCamposEnxoval();

            JOptionPane.showMessageDialog(this, "Enxoval cadastrada com sucesso!");
           
         }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        limparCamposEnxoval();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableEnxovalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEnxovalMouseClicked
        int indiceLinha = tableEnxoval.getSelectedRow();
        
        lblIdEnxovalChanged.setText(tableEnxoval.getValueAt(indiceLinha, 0).toString());
        txtTotalEnxoval.setText(tableEnxoval.getValueAt(indiceLinha, 1).toString());
        txtAno.setText(tableEnxoval.getValueAt(indiceLinha, 2).toString());
    }//GEN-LAST:event_tableEnxovalMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFileChooser jcf = new JFileChooser();
        jcf.setDialogTitle("Salvar relatório como...");
        String msg = "";
        int resultado = jcf.showSaveDialog(null);
        if (resultado == JFileChooser.APPROVE_OPTION) {
                String caminhoEscolhido = jcf.getSelectedFile().getAbsolutePath();
                
                GenerateReportEnxoval generateReportEnxoval = new GenerateReportEnxoval();
                msg = generateReportEnxoval.gerarPlanilhaEnxovais(enxovais, caminhoEscolhido);
                JOptionPane.showMessageDialog(null, msg);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main main = new Main();
                main.setLocationRelativeTo(null);
                main.setVisible(true);
            }
        });
    }
    
    private void atualizarTabelaPeca() {

        this.limparTabela();

        DefaultTableModel model = (DefaultTableModel) tableParts.getModel();

        for (Peca peca : pecas) {

                String[] novaLinha = new String[3];
                novaLinha[0] = String.valueOf(peca.getId());
                novaLinha[1] = peca.getName();
                novaLinha[2] = String.valueOf(peca.getAmount());

                model.addRow(novaLinha);
        }
        
    }
    
    private void atualizarTabelaEnxoval() {

        this.limparTabelaEnxoval();

        DefaultTableModel model = (DefaultTableModel) tableEnxoval.getModel();

        for (Enxoval enxoval : enxovais) {

                String[] novaLinha = new String[3];
                novaLinha[0] = String.valueOf(enxoval.getId());
                novaLinha[1] = String.valueOf(enxoval.getTotal());
                novaLinha[2] = String.valueOf(enxoval.getYear());

                model.addRow(novaLinha);
        }
        
    }

    private void limparTabela() {
        tableParts.setModel(new DefaultTableModel(new Object[][] { }, colunasTabelaParts));
    }
    
    private void limparTabelaEnxoval() {
        tableEnxoval.setModel(new DefaultTableModel(new Object[][] { }, colunasTabelaEnxoval));
    }
    
    private void rePopularTable() {
        PecaDAO pecaDAO = new PecaDAO();
        pecas = pecaDAO.listarPecas();
        atualizarTabelaPeca();
    }
    
    private void rePopularTableEnxoval() {
        EnxovalDAO enxovalDAO = new EnxovalDAO();
        enxovais = enxovalDAO.listarEnxoval();
        atualizarTabelaEnxoval();
    }
    
    private void limparCampos() {
        lblId.setText("id");
        txtPartName.setText("");
        txtPartAmount.setText("");
    }
    
    private void limparCamposEnxoval() {
        lblIdEnxovalChanged.setText("id");
        txtTotalEnxoval.setText("");
        txtAno.setText("");
    }
    
    private boolean existsName(String name) {
        PecaDAO pecaDAO = new PecaDAO();
        return pecaDAO.existsPartName(name);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletePart;
    private javax.swing.JButton btnGenerateReport;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAno;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIdEnxoval;
    private javax.swing.JLabel lblIdEnxovalChanged;
    private javax.swing.JLabel lblPartAmount;
    private javax.swing.JLabel lblPartName;
    private javax.swing.JLabel lblTotalEnxoval;
    private javax.swing.JTable tableEnxoval;
    private javax.swing.JTable tableParts;
    private javax.swing.JTextField txtAno;
    private javax.swing.JTextField txtPartAmount;
    private javax.swing.JTextField txtPartName;
    private javax.swing.JTextField txtTotalEnxoval;
    // End of variables declaration//GEN-END:variables

}
